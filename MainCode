/*
 * Created by Benjamin Edwards 
 * Date: 5/13/20
 * Description: Project A - Makes a game of guessing logos 
 * 
 * 
 * 
 */

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class GuessTheLogos extends Application{
	
	int skipCounter = 3; // keeps tracks of # of skips
	int turnCounter = 0; // keeps track of only guessing turns
	int superCounter = 0; // keeps track of all turns, skips or regular guessing
	int pointCounter = 0; // keeps track of points the user has obtained
	String userAnswer; // user's Answer
	int fileNum; // takes in the number of the file of ImageView
	Image image;
	
	public void start(Stage primaryStage) throws FileNotFoundException {
		///////////////DIRECTIONS/////////////////////////////
		Alert alertDirections = new Alert(AlertType.INFORMATION);
		alertDirections.setTitle("Instructions");
		alertDirections.setHeaderText(null);
		alertDirections.setContentText("- Welcome to the game of guessing logos\n"
				+ "- There are ten rounds to guess ten logos \n"
				+ "- You can skip 3 logos using the button labled \"Skip\", but skipping does not count as a round \n"
				+ "- Enter your answer in the text box and sumbit it using the button to the right of it labled \" Submit Answer\"");
		
		alertDirections.showAndWait();
		////////////////Creates an Array of Logo Names////////
		
		File file = new File("logoNames.txt");
		Scanner input = new Scanner(file);
		String[] logoNames = createLogoNames(input);
		
		////////////////Creates layout////////////////////////
		
		TextField textField = new TextField();
		textField.setAlignment(Pos.BOTTOM_LEFT);
		textField.setPrefColumnCount(13);
		
		Button button1 = new Button("Sumbit Answer");
		Button button2 = new Button();
		button2.setText("Skip Logo: " + skipCounter + "/" + "3 skips left");
		
		HBox hbox2 = new HBox(20, button1, button2);
		HBox hBox1 = new HBox(5);
		hBox1.setAlignment(Pos.CENTER);
		hBox1.getChildren().addAll(new Label("Your Answer: "), textField, hbox2);
		
		
		ArrayList<Integer> logos = getLogos(); // creates an array of random logos
			
		image = new Image(getImage(superCounter, logos));
		ImageView imageView = new ImageView(image);
		HBox hBox3 =  new HBox(imageView);
		

		hBox3.setAlignment(Pos.CENTER);
		hBox3.setSpacing(50);
		
		VBox vBox = new VBox(5);
		vBox.getChildren().addAll(hBox1, hBox3);
		
		Scene scene = new Scene(vBox, 550, 500);
		primaryStage.setTitle("Guess the Logos!");
		primaryStage.setScene(scene);
		primaryStage.show();
		
////////////////////Pop up windows/////////////////////////////
		Alert alertRight = new Alert(AlertType.INFORMATION);
		alertRight.setTitle("RIGHT!");
		alertRight.setHeaderText(null);
		
		Alert alertWrong = new Alert(AlertType.INFORMATION);
		alertWrong.setTitle("WRONG!");
		alertWrong.setHeaderText(null);
		
		Alert alertWinner = new Alert(AlertType.INFORMATION);
		alertWinner.setTitle("WOOHOO!");
		alertWinner.setHeaderText(null);
		
		Alert alertFinish = new Alert(AlertType.INFORMATION);
		alertFinish.setTitle("Game Over!");
		alertFinish.setHeaderText(null);
		
		Alert alertWarning = new Alert(AlertType.WARNING);
		alertWarning.setTitle("Warning!!!");
		alertWarning.setHeaderText("Warning Dialog");
		alertWarning.setContentText("The games is already finished please exit before mistakes are made");
/////////////////////Action listeners//////////////////////////////////////////
		
		button1.setOnAction(e -> {  // button action to submit answer
			
			userAnswer = textField.getText(); // records user's answer
			turnCounter++;
			
			fileNum = logos.get(0 + superCounter);
			/* debug
			System.out.println(getImage(superCounter, logos));
			System.out.println(fileNum);
			System.out.println(logoNames[fileNum - 1]);
			System.out.println(pointCounter);
			System.out.println(turnCounter);
			System.out.println(superCounter);
			*/
			if((userAnswer.equalsIgnoreCase(logoNames[fileNum - 1]) == true)) {
				
				pointCounter++;
				System.out.println("Hello World");
				alertRight.setContentText("+ 1 point \nYour Score: " + pointCounter + "/10 \n Keep up the Great Work!");

				alertRight.showAndWait();
			} else {
				alertWrong.setContentText("No points gained \nYour Score: " + pointCounter + "/10 \n Try Harder! \n The right answer was " + logoNames[fileNum - 1]);
				alertWrong.showAndWait();
			}
			
			superCounter++;
			imageView.setImage(new Image(getImage(superCounter, logos))); // loads another image
			
			if(turnCounter == 10) {
				
				if(pointCounter == 10) {
					alertWinner.setContentText("You got all right!!! \nYour Score: " + pointCounter + "/10 \n Nice Job! \n (Exit game and reopen to play again)");
					
					alertWinner.showAndWait();
				} else {
					alertFinish.setContentText("You Finished Congrats!!! \nYour Score: " + pointCounter + "/10 \n Play Again? \n (Exit game and reopen to play again)");
					
					alertFinish.showAndWait();
				}
				
				
			}
				
			if(turnCounter == 11) {
				
				alertWarning.showAndWait();
			}
				
				
			
		});
		
		
		
		button2.setOnAction(e -> {  // button action to skip logo
			if(skipCounter >= 1) {
				superCounter++;
				imageView.setImage(new Image(getImage(superCounter, logos)));
			    
			    skipCounter--;
			    button2.setText("Skip Logo: " + skipCounter + "/" + "3 skips left");
			    
			 
				} else {
					button2.setText("No Skips Left :(");
				}
		
		});
		
	
		
	}public static String[] createLogoNames(Scanner input) { // creates an array from a file of names
	      
	      String[] logoNames = new String[15];
	      
	      for(int i = 0; i < logoNames.length; i++) {
	      
	                  
	         logoNames[i] = input.nextLine();
	        
	       
	      }
	      /* debug
	      for(int i = 0; i < logoNames.length;i++) {
	    	  
	    	  System.out.println(logoNames[i]);
	      }
	      */
	      return logoNames;
	      
	} private ArrayList<Integer> getLogos() { // creates an array of random logos
		
		ArrayList<Integer> logos = new ArrayList<>();
		
		for (int i = 0; i < 15; i++) {
			logos.add(i + 1);
		}
		java.util.Collections.shuffle(logos);
		return logos;
		
	} public String getImage(int superCounter, ArrayList<Integer> logos) { // returns a image address to use
		
		return ("Logos/" + logos.get(0 + superCounter ) + ".jpg");
	}
	
	public static void main(String[] args) { // start up
		launch(args);
		
	}
}
